{"version":3,"sources":["subscribe.js"],"names":["subscribeBlock","document","querySelector","btnClose","subscribeMail","subscrForm","modalSuccessWrap","modalSuccessClose","subscrURL","addEventListener","evt","validity","patternMismatch","setCustomValidity","valueMissing","readyLoad","setTimeout","classList","add","e","preventDefault","remove","uploadSubscr","obj","xhr","XMLHttpRequest","open","status","console","log","response","style","display","keyCode","statusText","timeout","responseType","setRequestHeader","send","data","JSON","stringify","Object","keys","reduce","a","k","push","encodeURIComponent","join","email","value"],"mappings":"AAAA,IAAIA,eAAiBC,SAASC,cAAc,yBACxCC,SAAWF,SAASC,cAAc,cAClCE,cAAgBJ,eAAeE,cAAc,qBAC7CG,WAAaL,eAAeE,cAAc,oBAC1CI,iBAAmBL,SAASC,cAAc,wBAC1CK,kBAAoBN,SAASC,cAAc,yBAC3CM,UAAY,uDAKhBJ,cAAcK,iBAAiB,UAAW,SAAUC,GAC9CN,cAAcO,SAASC,gBACzBR,cAAcS,kBAAkB,uCACvBT,cAAcO,SAASG,aAChCV,cAAcS,kBAAkB,kBAEhCT,cAAcS,kBAAkB,MAIpC,IAAIE,UAAY,WACdC,WAAW,WACThB,eAAeiB,UAAUC,IAAI,sBAC5B,MAGLf,SAASM,iBAAiB,QAAS,SAAUU,GAC3CA,EAAEC,iBACFpB,eAAeiB,UAAUI,OAAO,uBAGlC,IAAIC,aAAe,SAAUC,GAC3B,IAE0BA,EAFtBC,EAAM,IAAIC,eAUdD,EAAIE,KAAK,OAAQlB,WAEjBgB,EAAIf,iBAAiB,OAAQ,WACR,MAAfe,EAAIG,QACNC,QAAQC,IAAIL,EAAIM,UAChBxB,iBAAiByB,MAAMC,QAAU,OAEjC/B,SAASQ,iBAAiB,UAAW,SAAUC,GACzB,KAAhBA,EAAIuB,UACN3B,iBAAiByB,MAAMC,QAAU,UAIrC/B,SAASQ,iBAAiB,QAAS,SAAUC,GAC3CJ,iBAAiByB,MAAMC,QAAU,SAGnCzB,kBAAkBE,iBAAiB,QAAS,WAC1CH,iBAAiByB,MAAMC,QAAU,UAGnCJ,QAAQC,IAAI,kBAAoBL,EAAIG,OAAS,IAAMH,EAAIU,cAI3DV,EAAIf,iBAAiB,QAAS,WAC5BmB,QAAQC,IAAI,iCAGdL,EAAIf,iBAAiB,UAAW,WAC9BmB,QAAQC,IAAI,kCAAoCL,EAAIW,QAAU,QAGhEX,EAAIW,QAAU,IAGdX,EAAIY,aAAe,OACnBZ,EAAIa,iBAAiB,eAAgB,qCAErCb,EAAIc,MA/CsBf,EA+CP,CACjBgB,KAAMC,KAAKC,UAAUlB,IA/CdmB,OAAOC,KAAKpB,GAAKqB,OAAO,SAAUC,EAAGC,GAE1C,OADAD,EAAEE,KAAKD,EAAI,IAAME,mBAAmBzB,EAAIuB,KACjCD,GACN,IAAII,KAAK,QAgDhB5C,WAAWI,iBAAiB,SAAU,SAAUC,GAC9CA,EAAIU,iBACJmB,KAAKW,MAAQ9C,cAAc+C,MAC3B7B,aAAaiB,QAKftC,SAASQ,iBAAiB,mBAAoBM","file":"subscribe.js","sourcesContent":["var subscribeBlock = document.querySelector('.main-subscribe-block');\r\nvar btnClose = document.querySelector('.close-btn');\r\nvar subscribeMail = subscribeBlock.querySelector('.subscribe__input');\r\nvar subscrForm = subscribeBlock.querySelector('.subscribe__form');\r\nvar modalSuccessWrap = document.querySelector('.modal__success-wrap');\r\nvar modalSuccessClose = document.querySelector('.modal__success-close');\r\nvar subscrURL = 'https://pp.deex.exchange/verify/request_service_info';\r\n\r\n// var subscrURL = 'https://pp.deex.exchange/verify/request_service_info';\r\n// var subscrURL = 'https://api-test.presale-deex.exchange/verify/request_service_info';\r\n\r\nsubscribeMail.addEventListener('invalid', function (evt) {\r\n  if (subscribeMail.validity.patternMismatch) {\r\n    subscribeMail.setCustomValidity('Please enter a valid email address.');\r\n  } else if (subscribeMail.validity.valueMissing) {\r\n    subscribeMail.setCustomValidity('Required field');\r\n  } else {\r\n    subscribeMail.setCustomValidity('');\r\n  }\r\n});\r\n\r\nvar readyLoad = function () {\r\n  setTimeout(function () {\r\n    subscribeBlock.classList.add('is-subscribe-open');\r\n  }, 10000)\r\n};\r\n\r\nbtnClose.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  subscribeBlock.classList.remove('is-subscribe-open');\r\n});\r\n\r\nvar uploadSubscr = function (obj) {\r\n  var xhr = new XMLHttpRequest();\r\n\r\n  var serialize = function (obj) {\r\n    return Object.keys(obj).reduce(function (a, k) {\r\n      a.push(k + \"=\" + encodeURIComponent(obj[k]));\r\n      return a;\r\n    }, []).join(\"&\");\r\n  };\r\n\r\n\r\n  xhr.open('POST', subscrURL);\r\n\r\n  xhr.addEventListener('load', function () {\r\n    if (xhr.status === 200) {\r\n      console.log(xhr.response);\r\n      modalSuccessWrap.style.display = 'flex';\r\n\r\n      document.addEventListener('keydown', function (evt) {\r\n        if (evt.keyCode === 27) {\r\n          modalSuccessWrap.style.display = 'none';\r\n        }\r\n      });\r\n\r\n      document.addEventListener('click', function (evt) {\r\n        modalSuccessWrap.style.display = 'none';\r\n      });\r\n\r\n      modalSuccessClose.addEventListener('click', function () {\r\n        modalSuccessWrap.style.display = 'none';\r\n      });\r\n    } else {\r\n      console.log('Статус ответа: ' + xhr.status + ' ' + xhr.statusText);\r\n    }\r\n  });\r\n\r\n  xhr.addEventListener('error', function () {\r\n    console.log('Произошла ошибка соединения');\r\n  });\r\n\r\n  xhr.addEventListener('timeout', function () {\r\n    console.log('Запрос не успел выполниться за ' + xhr.timeout + 'мс');\r\n  });\r\n\r\n  xhr.timeout = 10000;\r\n\r\n\r\n  xhr.responseType = 'json';\r\n  xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\r\n\r\n  xhr.send(serialize({\r\n    data: JSON.stringify(obj)\r\n  }));\r\n};\r\n\r\nsubscrForm.addEventListener('submit', function (evt) {\r\n  evt.preventDefault();\r\n  data.email = subscribeMail.value;\r\n  uploadSubscr(data);\r\n});\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", readyLoad);"]}